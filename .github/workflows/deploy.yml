name: CI/CD to EBS with pnpm

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v3

      - name: Instalar pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Instalar dependencias
        run: pnpm install --frozen-lockfile

      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Compilar NestJS
        run: pnpm run build

      - name: Crear ZIP para deploy
        run: zip -r deploy.zip . -x ".git/*" "node_modules/*" "*.zip" "drizzle.config.ts" "drizzle/*"

      - name: Crear bucket S3 si no existe
        run: |
          BUCKET_NAME="backend-nestjs-deploy-bucket"
          if ! aws s3 ls "s3://$BUCKET_NAME" 2>/dev/null; then
            echo "Creando bucket $BUCKET_NAME"
            aws s3 mb "s3://$BUCKET_NAME" --region ${{ secrets.AWS_REGION }}
          else
            echo "Bucket $BUCKET_NAME ya existe"
          fi

      - name: Subir ZIP a S3
        run: |
          aws s3 cp deploy.zip s3://backend-nestjs-deploy-bucket/deploy-${{ github.run_number }}.zip

      - name: Deploy a Elastic Beanstalk
        run: |
          VERSION_LABEL="v-${{ github.run_number }}-$(echo ${{ github.sha }} | cut -c1-7)"
          echo "Usando version label: $VERSION_LABEL"
          
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APPLICATION_NAME }} \
            --version-label "$VERSION_LABEL" \
            --source-bundle S3Bucket="backend-nestjs-deploy-bucket",S3Key="deploy-${{ github.run_number }}.zip"

          aws elasticbeanstalk update-environment \
            --environment-name ${{ secrets.EB_ENVIRONMENT_NAME }} \
            --version-label "$VERSION_LABEL"
